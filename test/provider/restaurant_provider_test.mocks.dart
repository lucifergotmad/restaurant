// Mocks generated by Mockito 5.4.0 from annotations
// in restaurants/test/provider/restaurant_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurants/data/api/api_services.dart' as _i6;
import 'package:restaurants/data/api/response/restaurant_detail_response.dart'
    as _i4;
import 'package:restaurants/data/api/response/restaurant_response.dart' as _i3;
import 'package:restaurants/data/api/response/restaurant_search_response.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRestaurantResponse_1 extends _i1.SmartFake
    implements _i3.RestaurantResponse {
  _FakeRestaurantResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRestaurantDetailResponse_2 extends _i1.SmartFake
    implements _i4.RestaurantDetailResponse {
  _FakeRestaurantDetailResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRestaurantSearchResponse_3 extends _i1.SmartFake
    implements _i5.RestaurantSearchResponse {
  _FakeRestaurantSearchResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i6.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);
  @override
  _i7.Future<_i3.RestaurantResponse> getListRestaurant() => (super.noSuchMethod(
        Invocation.method(
          #getListRestaurant,
          [],
        ),
        returnValue:
            _i7.Future<_i3.RestaurantResponse>.value(_FakeRestaurantResponse_1(
          this,
          Invocation.method(
            #getListRestaurant,
            [],
          ),
        )),
      ) as _i7.Future<_i3.RestaurantResponse>);
  @override
  _i7.Future<_i4.RestaurantDetailResponse> getDetailRestaurant(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailRestaurant,
          [id],
        ),
        returnValue: _i7.Future<_i4.RestaurantDetailResponse>.value(
            _FakeRestaurantDetailResponse_2(
          this,
          Invocation.method(
            #getDetailRestaurant,
            [id],
          ),
        )),
      ) as _i7.Future<_i4.RestaurantDetailResponse>);
  @override
  _i7.Future<_i5.RestaurantSearchResponse> searchRestaurant(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRestaurant,
          [query],
        ),
        returnValue: _i7.Future<_i5.RestaurantSearchResponse>.value(
            _FakeRestaurantSearchResponse_3(
          this,
          Invocation.method(
            #searchRestaurant,
            [query],
          ),
        )),
      ) as _i7.Future<_i5.RestaurantSearchResponse>);
}
